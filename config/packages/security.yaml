security:
    encoders:
        # this internal class is used by Symfony to represent in-memory users
        Symfony\Component\Security\Core\User\User: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        admins_users: 
            memory:
                users:
                    Alexandre: { password: '$argon2id$v=19$m=65536,t=4,p=1$02uKfFA2xtVHpAjWwAsFUw$GXXS137DuGFF6CJG+iRYsttXIIng0LQYTZ9RxUaXXiQ', roles: ['ROLE_ADMIN'] }
                    Dominique: { password: '$argon2id$v=19$m=65536,t=4,p=1$Iha35q4QDZVzDdw3YxWcNg$bXTwfAiL7y7SoWLtokgWYRN4S7SZI/MUdIwAF8f1R0U', roles: ['ROLE_ADMIN'] }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            form_login:
                login_path: /login
                check_path: /login
            provider: admins_users
            guard:
                authenticators:
                    - App\Security\AdminAuthenticator
            logout:
                path:   /logout
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
